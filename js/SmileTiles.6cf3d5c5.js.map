{"version":3,"sources":["webpack:///./src/views/SmileTiles.vue?f3df","webpack:///src/views/SmileTiles.vue","webpack:///./src/views/SmileTiles.vue?5d09","webpack:///./src/views/SmileTiles.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","backgroundColor","_s","score","best","current","currentTime","staticStyle","_l","index","key","ref","refInFor","_f","tiles","on","$event","clickedTile","_e","staticRenderFns","filters","tileColor","tileValue","color","computed","timer","watch","data","mounted","window","view","timerInterval","setInterval","setRandomTile","beforeDestroy","clearInterval","methods","updateScore","ignoreIndex","tileType","$set","component","VCard","VCardText","VCardTitle","VCol","VContainer","VLayout","VRow"],"mappings":"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","file":"js/SmileTiles.6cf3d5c5.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-layout',[_c('v-row',[_c('v-col',{staticClass:\"col-12 col-lg-4\"},[_c('v-card',[_c('v-card-title',[_vm._v(\"Smile Tiles\")]),_c('v-card-text',[_c('p',[_vm._v(\"This demo explores the \"),_c('code',[_vm._v(\"handsfree.pointer.state\")]),_vm._v(\" property to handle clicking on tiles.\")]),_c('h3',{staticClass:\"mb-3\"},[_vm._v(\"How to Play\")]),_c('ul',[_c('li',[_vm._v(\"Click on the black tiles to start or increase the timer\")]),_c('li',[_vm._v(\"Click on white tiles to restart\")]),_c('li',[_vm._v(\"Beat my high score of 80 ðŸ˜Ž\")])])])],1)],1),_c('v-col',{staticClass:\"col-12 col-lg-8\"},[_c('v-card',{attrs:{\"color\":_vm.backgroundColor}},[_c('v-card-text',[_c('v-layout',{attrs:{\"wrap\":\"\"}},[_c('v-row',[_c('v-col',{staticClass:\"col-12 col-sm-4\"},[_c('v-card',[_c('v-card-title',[_vm._v(\"Best: \"+_vm._s(_vm.score.best))])],1)],1),_c('v-col',{staticClass:\"col-12 col-sm-4\"},[_c('v-card',[_c('v-card-title',[_vm._v(\"Score: \"+_vm._s(_vm.score.current))])],1)],1),_c('v-col',{staticClass:\"col-12 col-sm-4\"},[_c('v-card',[_c('v-card-title',[_vm._v(\"Time: \"+_vm._s(_vm.currentTime))])],1)],1)],1)],1),_c('v-layout',[_c('v-row',[_c('v-col',{staticClass:\"md-6\"})],1)],1),_c('v-card',{staticStyle:{\"max-width\":\"500px\",\"margin\":\"auto\"},attrs:{\"color\":\"indigo lighten-2\"}},[_c('v-card-text',[_c('v-layout',[_c('v-row',{attrs:{\"dense\":\"\"}},_vm._l((16),function(index){return _c('v-col',{key:index,staticClass:\"col-3\"},[_c('v-card',{ref:\"tile\",refInFor:true,staticStyle:{\"height\":\"80px\"},attrs:{\"color\":_vm._f(\"tileColor\")(_vm.tiles[index - 1],index)},on:{\"click\":function($event){return _vm.clickedTile(index - 1)}}},[(_vm.tiles[index - 1] > 1)?_c('v-card-title',{staticStyle:{\"color\":\"#fff\",\"text-align\":\"center\"}},[_vm._v(_vm._s(_vm.tiles[index - 1]))]):_vm._e()],1)],1)}),1)],1)],1)],1)],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\r\n  v-container\r\n    v-layout\r\n      v-row\r\n        v-col.col-12.col-lg-4\r\n          v-card\r\n            v-card-title Smile Tiles\r\n            v-card-text\r\n              p This demo explores the <code>handsfree.pointer.state</code> property to handle clicking on tiles.\r\n\r\n              h3.mb-3 How to Play\r\n              ul\r\n                li Click on the black tiles to start or increase the timer\r\n                li Click on white tiles to restart\r\n                li Beat my high score of 80 ðŸ˜Ž\r\n        v-col.col-12.col-lg-8\r\n          v-card(:color='backgroundColor')\r\n            v-card-text\r\n              v-layout(wrap)\r\n                v-row\r\n                  v-col.col-12.col-sm-4\r\n                    v-card\r\n                      v-card-title Best: {{score.best}}\r\n                  v-col.col-12.col-sm-4\r\n                    v-card\r\n                      v-card-title Score: {{score.current}}\r\n                  v-col.col-12.col-sm-4\r\n                    v-card\r\n                      v-card-title Time: {{currentTime}}\r\n\r\n              v-layout\r\n                v-row\r\n                  v-col.md-6\r\n              v-card(color='indigo lighten-2' style='max-width: 500px; margin: auto')\r\n                v-card-text\r\n                  v-layout\r\n                    v-row(dense)\r\n                      v-col.col-3(v-for='index in 16' :key='index')\r\n                        v-card(style=\"height: 80px;\" ref='tile' @click='clickedTile(index - 1)' :color='tiles[index - 1] | tileColor(index)')\r\n                          v-card-title(v-if='tiles[index - 1] > 1' style='color: #fff; text-align: center') {{tiles[index - 1]}}\r\n</template>\r\n\r\n<script>\r\nimport { random, debounce } from 'lodash'\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  filters: {\r\n    tileColor(tileValue) {\r\n      let color = 'white'\r\n\r\n      if (tileValue) {\r\n        color = 'black'\r\n      }\r\n\r\n      return color\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    backgroundColor() {\r\n      return !this.score.current ? 'pink darken-3' : 'indigo'\r\n    },\r\n\r\n    currentTime() {\r\n      return this.timer > 0 ? this.timer : 0\r\n    },\r\n\r\n    ...mapState(['isTracking'])\r\n  },\r\n\r\n  watch: {\r\n    timer() {\r\n      if (this.timer < 0) {\r\n        this.score.current = 0\r\n      }\r\n    }\r\n  },\r\n\r\n  data: () => ({\r\n    tiles: Array.from({ length: 16 }, () => 0),\r\n    timerInterval: null,\r\n    timer: 0,\r\n    score: {\r\n      current: 0,\r\n      best: 0\r\n    }\r\n  }),\r\n\r\n  /**\r\n   * - Choose 3 items on random\r\n   * - Create the timer interval\r\n   */\r\n  mounted() {\r\n    window.view = this\r\n    this.timerInterval = setInterval(() => {\r\n      this.timer -= 1\r\n    }, 100)\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      this.setRandomTile()\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Destroy the timer\r\n   */\r\n  beforeDestroy() {\r\n    clearInterval(this.timerInterval)\r\n  },\r\n\r\n  methods: {\r\n    /**\r\n     * Handle clicks with a debounce for accidental clicks\r\n     */\r\n    clickedTile: debounce(\r\n      function(index) {\r\n        if (\r\n          this.$store.state.handsfree.pointer.state === 'mouseDown' ||\r\n          !this.isTracking\r\n        ) {\r\n          this.updateScore(index)\r\n\r\n          if (this.tiles[index] > 0) {\r\n            this.$set(this.tiles, index, this.tiles[index] - 1)\r\n            if (this.tiles[index] === 0) this.setRandomTile(index)\r\n          }\r\n        }\r\n      },\r\n      100,\r\n      { leading: true }\r\n    ),\r\n\r\n    /**\r\n     * Updates the score based on the type of the tile\r\n     */\r\n    updateScore(index) {\r\n      // Update the score\r\n      if (this.tiles[index] === 0) {\r\n        this.score.current = 0\r\n        this.timer = 0\r\n      } else if (this.tiles[index]) {\r\n        this.score.current += 10\r\n\r\n        if (this.timer < 0) {\r\n          this.timer = 20\r\n        } else {\r\n          this.timer += 9\r\n        }\r\n      }\r\n\r\n      // Update best score\r\n      if (this.score.current > this.score.best) {\r\n        this.score.best = this.score.current\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Sets a random white tile to a random grid type\r\n     */\r\n    setRandomTile(ignoreIndex = -1) {\r\n      let index = random(0, 15)\r\n\r\n      // Keep repeating until we have a valid tile\r\n      if (this.tiles[index] || ignoreIndex === index) {\r\n        return this.setRandomTile(ignoreIndex)\r\n      }\r\n\r\n      let tileType = Math.random() * 100\r\n\r\n      if (tileType < 90) {\r\n        this.$set(this.tiles, index, 1)\r\n      } else {\r\n        this.$set(this.tiles, index, 3)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SmileTiles.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SmileTiles.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SmileTiles.vue?vue&type=template&id=4eda8d2d&lang=pug&\"\nimport script from \"./SmileTiles.vue?vue&type=script&lang=js&\"\nexport * from \"./SmileTiles.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VCard,VCardText,VCardTitle,VCol,VContainer,VLayout,VRow})\n"],"sourceRoot":""}